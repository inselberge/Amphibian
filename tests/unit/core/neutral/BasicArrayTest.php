<?php
require_once __DIR__ . DIRECTORY_SEPARATOR . ".." . DIRECTORY_SEPARATOR . ".." . DIRECTORY_SEPARATOR . "baseTest.php";
require_once AMPHIBIAN_CORE_NEUTRAL."BasicArray.php";
/**
 * Class BasicArrayTest
 *
 * @category 
 * @package  
 * @author   
 * @license  
 * @link     documentation/BasicArrayTest
 *
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-04-06 at 23:05:41.
 *
 */
class BasicArrayTest 
    extends PHPUnit_Framework_TestCase
{
    /**
     * @var object BasicArray an instance of BasicArray
     */
    protected $object;

    /** setUp
     *
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @return void
     */
    protected function setUp()
    {
        $this->object = new BasicArray();
    }

    /** tearDown
     *
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return void
     */
    protected function tearDown()
    {
    }

    /** testInstance
     *
     * @covers BasicArray::instance
     *
     * @todo   Implement testInstance().
     *
     * @return void
     */
    public function testInstance()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testFactory
     *
     * @covers BasicArray::factory
     *
     * @todo   Implement testFactory().
     *
     * @return void
     */
    public function testFactory()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testAppend
     *
     * @covers BasicArray::append
     *
     * @todo   Implement testAppend().
     *
     * @return void
     */
    public function testAppend()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testRemove
     *
     * @covers BasicArray::remove
     *
     * @todo   Implement testRemove().
     *
     * @return void
     */
    public function testRemove()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testChunk
     *
     * @covers BasicArray::chunk
     *
     * @todo   Implement testChunk().
     *
     * @return void
     */
    public function testChunk()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testCombine
     *
     * @covers BasicArray::combine
     *
     * @todo   Implement testCombine().
     *
     * @return void
     */
    public function testCombine()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testColumn
     *
     * @covers BasicArray::column
     *
     * @todo   Implement testColumn().
     *
     * @return void
     */
    public function testColumn()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testMerge
     *
     * @covers BasicArray::merge
     *
     * @todo   Implement testMerge().
     *
     * @return void
     */
    public function testMerge()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testKeySort
     *
     * @covers BasicArray::keySort
     *
     * @todo   Implement testKeySort().
     *
     * @return void
     */
    public function testKeySort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testChange_key_case
     *
     * @covers BasicArray::change_key_case
     *
     * @todo   Implement testChange_key_case().
     *
     * @return void
     */
    public function testChange_key_case()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testCount_values
     *
     * @covers BasicArray::count_values
     *
     * @todo   Implement testCount_values().
     *
     * @return void
     */
    public function testCount_values()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testDiff_assoc
     *
     * @covers BasicArray::diff_assoc
     *
     * @todo   Implement testDiff_assoc().
     *
     * @return void
     */
    public function testDiff_assoc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testDiff_key
     *
     * @covers BasicArray::diff_key
     *
     * @todo   Implement testDiff_key().
     *
     * @return void
     */
    public function testDiff_key()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testDiff_uassoc
     *
     * @covers BasicArray::diff_uassoc
     *
     * @todo   Implement testDiff_uassoc().
     *
     * @return void
     */
    public function testDiff_uassoc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testDiff_ukey
     *
     * @covers BasicArray::diff_ukey
     *
     * @todo   Implement testDiff_ukey().
     *
     * @return void
     */
    public function testDiff_ukey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testDiff
     *
     * @covers BasicArray::diff
     *
     * @todo   Implement testDiff().
     *
     * @return void
     */
    public function testDiff()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testFill_keys
     *
     * @covers BasicArray::fill_keys
     *
     * @todo   Implement testFill_keys().
     *
     * @return void
     */
    public function testFill_keys()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testFill
     *
     * @covers BasicArray::fill
     *
     * @todo   Implement testFill().
     *
     * @return void
     */
    public function testFill()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testFilter
     *
     * @covers BasicArray::filter
     *
     * @todo   Implement testFilter().
     *
     * @return void
     */
    public function testFilter()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testFlip
     *
     * @covers BasicArray::flip
     *
     * @todo   Implement testFlip().
     *
     * @return void
     */
    public function testFlip()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testIntersect_assoc
     *
     * @covers BasicArray::intersect_assoc
     *
     * @todo   Implement testIntersect_assoc().
     *
     * @return void
     */
    public function testIntersect_assoc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testIntersect_key
     *
     * @covers BasicArray::intersect_key
     *
     * @todo   Implement testIntersect_key().
     *
     * @return void
     */
    public function testIntersect_key()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testIntersect_uassoc
     *
     * @covers BasicArray::intersect_uassoc
     *
     * @todo   Implement testIntersect_uassoc().
     *
     * @return void
     */
    public function testIntersect_uassoc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testIntersect_ukey
     *
     * @covers BasicArray::intersect_ukey
     *
     * @todo   Implement testIntersect_ukey().
     *
     * @return void
     */
    public function testIntersect_ukey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testIntersect
     *
     * @covers BasicArray::intersect
     *
     * @todo   Implement testIntersect().
     *
     * @return void
     */
    public function testIntersect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testKey_exists
     *
     * @covers BasicArray::key_exists
     *
     * @todo   Implement testKey_exists().
     *
     * @return void
     */
    public function testKey_exists()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testKeys
     *
     * @covers BasicArray::keys
     *
     * @todo   Implement testKeys().
     *
     * @return void
     */
    public function testKeys()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testMap
     *
     * @covers BasicArray::map
     *
     * @todo   Implement testMap().
     *
     * @return void
     */
    public function testMap()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testMerge_recursive
     *
     * @covers BasicArray::merge_recursive
     *
     * @todo   Implement testMerge_recursive().
     *
     * @return void
     */
    public function testMerge_recursive()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testMultisort
     *
     * @covers BasicArray::multisort
     *
     * @todo   Implement testMultisort().
     *
     * @return void
     */
    public function testMultisort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testPad
     *
     * @covers BasicArray::pad
     *
     * @todo   Implement testPad().
     *
     * @return void
     */
    public function testPad()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testPop
     *
     * @covers BasicArray::pop
     *
     * @todo   Implement testPop().
     *
     * @return void
     */
    public function testPop()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testProduct
     *
     * @covers BasicArray::product
     *
     * @todo   Implement testProduct().
     *
     * @return void
     */
    public function testProduct()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testPush
     *
     * @covers BasicArray::push
     *
     * @todo   Implement testPush().
     *
     * @return void
     */
    public function testPush()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testRand
     *
     * @covers BasicArray::rand
     *
     * @todo   Implement testRand().
     *
     * @return void
     */
    public function testRand()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testReduce
     *
     * @covers BasicArray::reduce
     *
     * @todo   Implement testReduce().
     *
     * @return void
     */
    public function testReduce()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testReplace_recursive
     *
     * @covers BasicArray::replace_recursive
     *
     * @todo   Implement testReplace_recursive().
     *
     * @return void
     */
    public function testReplace_recursive()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testReplace
     *
     * @covers BasicArray::replace
     *
     * @todo   Implement testReplace().
     *
     * @return void
     */
    public function testReplace()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testReverse
     *
     * @covers BasicArray::reverse
     *
     * @todo   Implement testReverse().
     *
     * @return void
     */
    public function testReverse()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSearch
     *
     * @covers BasicArray::search
     *
     * @todo   Implement testSearch().
     *
     * @return void
     */
    public function testSearch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testShift
     *
     * @covers BasicArray::shift
     *
     * @todo   Implement testShift().
     *
     * @return void
     */
    public function testShift()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSlice
     *
     * @covers BasicArray::slice
     *
     * @todo   Implement testSlice().
     *
     * @return void
     */
    public function testSlice()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSplice
     *
     * @covers BasicArray::splice
     *
     * @todo   Implement testSplice().
     *
     * @return void
     */
    public function testSplice()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSum
     *
     * @covers BasicArray::sum
     *
     * @todo   Implement testSum().
     *
     * @return void
     */
    public function testSum()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUdiff_assoc
     *
     * @covers BasicArray::udiff_assoc
     *
     * @todo   Implement testUdiff_assoc().
     *
     * @return void
     */
    public function testUdiff_assoc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUdiff_uassoc
     *
     * @covers BasicArray::udiff_uassoc
     *
     * @todo   Implement testUdiff_uassoc().
     *
     * @return void
     */
    public function testUdiff_uassoc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUdiff
     *
     * @covers BasicArray::udiff
     *
     * @todo   Implement testUdiff().
     *
     * @return void
     */
    public function testUdiff()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUintersect_assoc
     *
     * @covers BasicArray::uintersect_assoc
     *
     * @todo   Implement testUintersect_assoc().
     *
     * @return void
     */
    public function testUintersect_assoc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUintersect_uassoc
     *
     * @covers BasicArray::uintersect_uassoc
     *
     * @todo   Implement testUintersect_uassoc().
     *
     * @return void
     */
    public function testUintersect_uassoc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUintersect
     *
     * @covers BasicArray::uintersect
     *
     * @todo   Implement testUintersect().
     *
     * @return void
     */
    public function testUintersect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUnique
     *
     * @covers BasicArray::unique
     *
     * @todo   Implement testUnique().
     *
     * @return void
     */
    public function testUnique()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUnshift
     *
     * @covers BasicArray::unshift
     *
     * @todo   Implement testUnshift().
     *
     * @return void
     */
    public function testUnshift()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testValues
     *
     * @covers BasicArray::values
     *
     * @todo   Implement testValues().
     *
     * @return void
     */
    public function testValues()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testWalk_recursive
     *
     * @covers BasicArray::walk_recursive
     *
     * @todo   Implement testWalk_recursive().
     *
     * @return void
     */
    public function testWalk_recursive()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testWalk
     *
     * @covers BasicArray::walk
     *
     * @todo   Implement testWalk().
     *
     * @return void
     */
    public function testWalk()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testArsort
     *
     * @covers BasicArray::arsort
     *
     * @todo   Implement testArsort().
     *
     * @return void
     */
    public function testArsort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testAsort
     *
     * @covers BasicArray::asort
     *
     * @todo   Implement testAsort().
     *
     * @return void
     */
    public function testAsort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testCompact
     *
     * @covers BasicArray::compact
     *
     * @todo   Implement testCompact().
     *
     * @return void
     */
    public function testCompact()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testCount
     *
     * @covers BasicArray::count
     *
     * @todo   Implement testCount().
     *
     * @return void
     */
    public function testCount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testCurrent
     *
     * @covers BasicArray::current
     *
     * @todo   Implement testCurrent().
     *
     * @return void
     */
    public function testCurrent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testEach
     *
     * @covers BasicArray::each
     *
     * @todo   Implement testEach().
     *
     * @return void
     */
    public function testEach()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testEnd
     *
     * @covers BasicArray::end
     *
     * @todo   Implement testEnd().
     *
     * @return void
     */
    public function testEnd()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testExtract
     *
     * @covers BasicArray::extract
     *
     * @todo   Implement testExtract().
     *
     * @return void
     */
    public function testExtract()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testIn_array
     *
     * @covers BasicArray::in_array
     *
     * @todo   Implement testIn_array().
     *
     * @return void
     */
    public function testIn_array()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testKey
     *
     * @covers BasicArray::key
     *
     * @todo   Implement testKey().
     *
     * @return void
     */
    public function testKey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testKrsort
     *
     * @covers BasicArray::krsort
     *
     * @todo   Implement testKrsort().
     *
     * @return void
     */
    public function testKrsort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testKsort
     *
     * @covers BasicArray::ksort
     *
     * @todo   Implement testKsort().
     *
     * @return void
     */
    public function testKsort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testNatcasesort
     *
     * @covers BasicArray::natcasesort
     *
     * @todo   Implement testNatcasesort().
     *
     * @return void
     */
    public function testNatcasesort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testNatsort
     *
     * @covers BasicArray::natsort
     *
     * @todo   Implement testNatsort().
     *
     * @return void
     */
    public function testNatsort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testNext
     *
     * @covers BasicArray::next
     *
     * @todo   Implement testNext().
     *
     * @return void
     */
    public function testNext()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testPos
     *
     * @covers BasicArray::pos
     *
     * @todo   Implement testPos().
     *
     * @return void
     */
    public function testPos()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testPrev
     *
     * @covers BasicArray::prev
     *
     * @todo   Implement testPrev().
     *
     * @return void
     */
    public function testPrev()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testRange
     *
     * @covers BasicArray::range
     *
     * @todo   Implement testRange().
     *
     * @return void
     */
    public function testRange()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testReset
     *
     * @covers BasicArray::reset
     *
     * @todo   Implement testReset().
     *
     * @return void
     */
    public function testReset()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testRsort
     *
     * @covers BasicArray::rsort
     *
     * @todo   Implement testRsort().
     *
     * @return void
     */
    public function testRsort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testShuffle
     *
     * @covers BasicArray::shuffle
     *
     * @todo   Implement testShuffle().
     *
     * @return void
     */
    public function testShuffle()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSizeof
     *
     * @covers BasicArray::sizeof
     *
     * @todo   Implement testSizeof().
     *
     * @return void
     */
    public function testSizeof()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSort
     *
     * @covers BasicArray::sort
     *
     * @todo   Implement testSort().
     *
     * @return void
     */
    public function testSort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUasort
     *
     * @covers BasicArray::uasort
     *
     * @todo   Implement testUasort().
     *
     * @return void
     */
    public function testUasort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUksort
     *
     * @covers BasicArray::uksort
     *
     * @todo   Implement testUksort().
     *
     * @return void
     */
    public function testUksort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testUsort
     *
     * @covers BasicArray::usort
     *
     * @todo   Implement testUsort().
     *
     * @return void
     */
    public function testUsort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
