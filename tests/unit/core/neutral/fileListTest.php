<?php

require_once __DIR__ . DIRECTORY_SEPARATOR . ".." . DIRECTORY_SEPARATOR . ".." . DIRECTORY_SEPARATOR . "baseTest.php";
require_once AMPHIBIAN_CORE_NEUTRAL."FileList.php";
/**
 * Class FileListTest
 *
 * @category Test
 * @package  FileList
 * @author   Carl 'Tex' Morgan <texmorgan@amphibian.co>
 * @license  All rights reserved by Inselberge Inc. unless otherwise stated.
 * @link     documentation/FileListTest
 *
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-08 at 17:05:31.
 *
 */
class FileListTest
    extends BaseTest
{

    /** setUp
     *
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @return void
     */
    protected function setUp()
    {
        $this->object = FileList::instance(".");
    }

    /** testInstance
     *
     * @covers FileList::instance
     *
     * @return void
     */
    public function testInstance()
    {
        $this->expected = $this->object;
        $this->actual = FileList::instance(".");
        $this->assertEquals($this->expected, $this->actual);
    }

    /** testSet_quoted
     *
     * @covers FileList::set_quoted
     *
     * @return void
     */
    public function testSet_quoted()
    {
        $this->expected = null;
        $this->actual = $this->object->set_quoted();
        $this->assertEquals($this->expected, $this->actual);
    }

    /** testExecute
     *
     * @covers FileList::execute
     *
     * @return void
     */
    public function testExecute()
    {
        $this->expected = true;
        $this->actual = $this->object->execute();
        $this->assertEquals($this->expected, $this->actual);
    }

    /** testSetLocation
     *
     * @covers FileList::setLocation
     *
     * @return void
     */
    public function testSetLocation()
    {
        $this->expected = true;
        $this->actual = $this->object->setLocation(__DIR__);
        $this->assertEquals($this->expected, $this->actual);
    }

    /** testPrintCount
     *
     * @covers FileList::printCount
     *
     * @return void
     */
    public function testPrintCount()
    {
        $this->expected = 10;
        $this->actual = $this->object->printCount();
        $this->assertEquals($this->expected, $this->actual);
    }

    /** testPrintMatches
     *
     * @covers FileList::printMatches
     *
     * @return void
     */
    public function testPrintMatches()
    {
        $this->expected = null;
        $this->actual = $this->object->printMatches();
        $this->assertEquals($this->expected, $this->actual);
    }

    /** testPrintFileName
     *
     * @covers FileList::printFileName
     *
     * @return void
     */
    public function testPrintFileName()
    {
        $this->expected = null;
        $this->actual = $this->object->printFileName();
        $this->assertEquals($this->expected, $this->actual);
    }

    /** testPrintSelectList
     *
     * @covers FileList::printSelectList
     *
     * @return void
     */
    public function testPrintSelectList()
    {
        $this->expected = null;
        $this->actual = $this->object->printSelectList();
        $this->assertEquals($this->expected, $this->actual);
    }
}
