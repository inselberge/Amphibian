<?php

require_once __DIR__ . DIRECTORY_SEPARATOR."..".DIRECTORY_SEPARATOR.".." . DIRECTORY_SEPARATOR . ".." . DIRECTORY_SEPARATOR . "config" . DIRECTORY_SEPARATOR . "config.inc.php";
require_once __DIR__ . DIRECTORY_SEPARATOR."..".DIRECTORY_SEPARATOR."baseTest.php";
require_once AMPHIBIAN_CORE . "RandomPassword.php";
/**
 * Class randomPasswordTest
 *
 * @category Test
 * @package  RandomPassword
 * @author   Carl 'Tex' Morgan <texmorgan@amphibian.co>
 * @license  All rights reserved by Inselberge Inc. unless otherwise stated.
 * @link     documentation/randomPasswordTest
 *
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-08 at 17:05:30.
 *
 */
class randomPasswordTest 
    extends BaseTest
{
    /** algorithmDataProvider
     *
     * @return array
     */
    public function algorithmDataProvider()
    {
        return hash_algos();
    }

    /** setUp
     *
     * @param string $algorithm an algorithm to test
     *
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @dataProvider algorithmDataProvider
     *
     * @return void
     */
    protected function setUp($algorithm)
    {
        $this->object = new randomPassword($algorithm, 16);
    }

    /** testCheckSupportedAlgo
     *
     * @covers randomPassword::checkSupportedAlgo
     *
     * @return void
     */
    public function testCheckSupportedAlgo()
    {
        $this->expected = true;
        $this->actual = $this->object->checkSupportedAlgo();
        $this->assertEquals($this->expected, $this->actual);
    }

    /** testCreatePassword
     *
     * @covers randomPassword::createPassword
     *
     * @return void
     */
    public function testCreatePassword()
    {
        $this->expected = true;
        $this->actual = $this->object->createPassword();
        $this->assertEquals($this->expected, $this->actual);
    }
}
