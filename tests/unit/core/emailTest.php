<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-08-23 at 22:51:31.
 */
require_once __DIR__ . DIRECTORY_SEPARATOR."..".DIRECTORY_SEPARATOR."..".DIRECTORY_SEPARATOR."..".DIRECTORY_SEPARATOR."config/config.inc.php";
require_once __DIR__ . DIRECTORY_SEPARATOR."..".DIRECTORY_SEPARATOR."baseTest.php";
require_once AMPHIBIAN_CORE . "Email.php";

class emailTest
    extends BaseTest
{

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = email::instance();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /** testInstance
     *
     * @covers email::instance
     *
     * @return void
     */
    public function testInstance()
    {
        $this->assertEquals($this->object, email::instance());
        $this->assertNotEquals($this->object, null);
    }

    /** testSetAdditionalHeaders
     *
     * @covers email::setAdditionalHeaders
     *
     * @return void
     */
    public function testSetAdditionalHeaders()
    {
        $this->assertTrue(true, $this->object->setAdditionalHeaders( 'From: texmorgan@gmail.com' . "\r\n"));
        $this->assertFalse(false, $this->object->setAdditionalParameters(""));
    }

    /** testSetAdditionalParameters
     *
     * @covers email::setAdditionalParameters
     *
     * @return void
     */
    public function testSetAdditionalParameters()
    {
        $this->assertTrue(true, $this->object->setAdditionalParameters("badkafdlkjg"));
        $this->assertFalse(false, $this->object->setAdditionalParameters(""));
    }

    /** testSetBcc
     *
     * @covers email::setBcc
     *
     * @return void
     */
    public function testSetBcc()
    {
        $this->assertTrue(true, $this->object->setBcc("texmorgan@gmail.com"));
        $this->assertFalse(false, $this->object->setBcc("texmorgan@gmail.com"));
    }

    /** testSetCc
     *
     * @covers email::setCc
     *
     * @return void
     */
    public function testSetCc()
    {
        $this->assertTrue(true, $this->object->setCc("texmorgan@gmail.com"));
        $this->assertFalse(false, $this->object->setCc(""));
    }

    /** testSetFrom
     *
     * @covers email::setFrom
     *
     * @return void
     */
    public function testSetFrom()
    {
        $this->assertTrue(true, $this->object->setFrom("texmorgan@gmail.com"));
        $this->assertFalse(false,$this->object->setFrom(""));
    }

    /** testSetMessage
     *
     * @covers email::setMessage
     *
     * @return void
     */
    public function testSetMessage()
    {
        $this->assertTrue(true,$this->object->setMessage("Hello"));
        $this->assertFalse(false,$this->object->setMessage(""));
    }

    /** testSetSubject
     *
     * @covers email::setSubject
     *
     * @return void
     */
    public function testSetSubject()
    {
        $this->assertTrue(true,$this->object->setSubject("Hello"));
        $this->assertFalse(false,$this->object->setSubject(""));
    }

    /** testSetTo
     *
     * @covers email::setTo
     *
     * @return void
     */
    public function testSetTo()
    {
        $this->assertTrue(true, $this->object->setTo("texmorgan@gmail.com"));
        $this->assertFalse(false, $this->object->setTo(""));
    }

    /** testSendHTML
     *
     * @covers email::sendHTML
     *
     * @return void
     */
    public function testSendHTML()
    {
        $this->object->setTo("texmorgan@gmail.com");
        $this->object->setFrom("texmorgan@gmail.com");
        $this->object->setSubject("Hello");
        $this->object->setMessage("Hello");
        $this->assertTrue(true,$this->object->sendHTML());
    }

    /** testSend
     *
     * @covers email::send
     *
     * @return void
     */
    public function testSend()
    {
        $this->object->setTo("texmorgan@gmail.com");
        $this->object->setFrom("texmorgan@gmail.com");
        $this->object->setSubject("Hello");
        $this->object->setMessage("Hello");
        $this->assertTrue(true, $this->object->send());
    }

    /** testAddToHTMLHead
     *
     * @covers email::addToHTMLHead
     *
     * @return void
     */
    public function testAddToHTMLHead()
    {
        $this->assertTrue(true, $this->object->addToHTMLHead('<link src="style.css"/>'));
        $this->assertFalse(false, $this->object->addToHTMLHead(''));
    }

    /** testSendDefaultEmail
     *
     * @covers email::sendDefaultEmail
     *
     * @return void
     */
    public function testSendDefaultEmail()
    {
        $this->assertTrue(true, $this->object->sendDefaultEmail("texmorgan@gmail.com","texmorgan@gmail.com","hello","hello"));
    }
}
