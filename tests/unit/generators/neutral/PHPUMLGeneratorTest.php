<?php
require_once __DIR__ . DIRECTORY_SEPARATOR . ".." . DIRECTORY_SEPARATOR . ".." . DIRECTORY_SEPARATOR . "baseTest.php";

require_once AMPHIBIAN_GENERATORS_NEUTRAL."PHPUMLGenerator.php";
/**
 * Class PHPUMLGeneratorTest
 *
 * @category 
 * @package  
 * @author   
 * @license  
 * @link     documentation/PHPUMLGeneratorTest
 *
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-04-06 at 21:57:09.
 *
 */
class PHPUMLGeneratorTest 
    extends PHPUnit_Framework_TestCase
{
    /**
     * @var object PHPUMLGenerator an instance of PHPUMLGenerator
     */
    protected $object;

    /** setUp
     *
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @return void
     */
    protected function setUp()
    {
        $this->object = new PHPUMLGenerator();
    }

    /** tearDown
     *
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return void
     */
    protected function tearDown()
    {
    }

    /** testInstance
     *
     * @covers PHPUMLGenerator::instance
     *
     * @todo   Implement testInstance().
     *
     * @return void
     */
    public function testInstance()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testFactory
     *
     * @covers PHPUMLGenerator::factory
     *
     * @todo   Implement testFactory().
     *
     * @return void
     */
    public function testFactory()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSetDestination
     *
     * @covers PHPUMLGenerator::setDestination
     *
     * @todo   Implement testSetDestination().
     *
     * @return void
     */
    public function testSetDestination()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSetSource
     *
     * @covers PHPUMLGenerator::setSource
     *
     * @todo   Implement testSetSource().
     *
     * @return void
     */
    public function testSetSource()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSetEncoding
     *
     * @covers PHPUMLGenerator::setEncoding
     *
     * @todo   Implement testSetEncoding().
     *
     * @return void
     */
    public function testSetEncoding()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSetOutputFormat
     *
     * @covers PHPUMLGenerator::setOutputFormat
     *
     * @todo   Implement testSetOutputFormat().
     *
     * @return void
     */
    public function testSetOutputFormat()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testSetXmiVersion
     *
     * @covers PHPUMLGenerator::setXmiVersion
     *
     * @todo   Implement testSetXmiVersion().
     *
     * @return void
     */
    public function testSetXmiVersion()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /** testExecute
     *
     * @covers PHPUMLGenerator::execute
     *
     * @todo   Implement testExecute().
     *
     * @return void
     */
    public function testExecute()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
